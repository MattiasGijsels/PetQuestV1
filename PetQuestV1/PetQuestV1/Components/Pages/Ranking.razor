@page "/ranking"
@using PetQuestV1.Contracts.DTOs
@using PetQuestV1.Contracts.Models
@inject PetQuestV1.Contracts.Defines.IPetService PetService
@rendermode InteractiveServer

<div class="ranking-container">
    @* New container for overall styling *@
    <h3 class="ranking-title">Pet Rankings</h3> @* Applied title style *@

    @if (DisplayedPets == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!DisplayedPets.Any())
    {
        <div class="no-pets-message">No pets to display.</div> @* Used existing style for no pets *@
    }
    else
    {
        <table class="table table-striped">
            @* Used table classes for styling *@
            <thead>
                <tr>
                    <th>Rank</th>
                    <th>Pet Name</th>
                    <th>Species</th>
                    <th>Breed</th>
                    <th>Age</th>
                    <th>Advantage</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pet in DisplayedPets)
                {
                    var rank = _allPets?.IndexOf(pet) + 1;
                    <tr>
                        <td>@(rank)</td>
                        <td>@pet.PetName</td>
                        <td>@pet.Species?.SpeciesName</td>
                        <td>@pet.Breed?.BreedName</td>
                        <td>@(pet.Age.HasValue? pet.Age.Value.ToString("F1") : "N/A")</td>
                        <td class="advantage-score">@pet.Advantage</td> @* Applied new class for Advantage color *@
                    </tr>
                }
            </tbody>
        </table>

        @* Pagination Controls - classes updated to match VirtualPet button styles *@
        <nav>
            <ul class="pagination">
                <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                    <button class="page-link" @onclick="() => ChangePage(CurrentPage - 1)">Previous</button>
                </li>
                @for (int i = 1; i <= TotalPages; i++)
                {
                    var pageNumber = i;
                    <li class="page-item @(CurrentPage == pageNumber ? "active" : "")">
                        <button class="page-link" @onclick="() => ChangePage(pageNumber)">@pageNumber</button>
                    </li>
                }
                <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                    <button class="page-link" @onclick="() => ChangePage(CurrentPage + 1)">Next</button>
                </li>
            </ul>
        </nav>
    }
</div>