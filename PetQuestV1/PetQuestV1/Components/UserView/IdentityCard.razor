@namespace PetQuestV1.Components.UserView
@using PetQuestV1.Contracts.Models
@using Microsoft.AspNetCore.Components.Forms

<div class="card h-100 shadow-sm border-0 d-flex flex-column pet-card-compact">
    <div class="card-img-container position-relative">
        @if (!string.IsNullOrEmpty(Pet.ImagePath))
        {
            <img src="@Pet.ImagePath" class="card-img pet-card-img-large" alt="Image of @Pet.PetName">
            <button class="btn btn-danger btn-sm delete-image-btn" @onclick="DeleteImage">
                <i class="bi bi-trash"></i>
            </button>
        }
        else
        {
            <div class="d-flex justify-content-center align-items-center bg-light text-muted pet-card-img-large no-image-placeholder">
                <i class="bi bi-image-fill display-4"></i>
            </div>
            <div class="position-absolute bottom-0 end-0 p-2">
                <InputFile OnChange="OnInputFileChange" class="form-control-sm" accept="image/*" />
            </div>
        }
    </div>
    <div class="card-body d-flex flex-grow-1">
        <div class="text-content">
            <h5 class="card-title text-primary">@Pet.PetName</h5>
            <ul class="list-unstyled mb-0">
                <li><strong>Species:</strong> @(Pet.Species?.SpeciesName ?? "N/A")</li>
                <li><strong>Breed:</strong> @(Pet.Breed?.BreedName ?? "N/A")</li>
                <li><strong>Age:</strong> @(Pet.Age?.ToString() ?? "Unknown")</li>
                <li><strong>Owner:</strong> @(Pet.Owner?.UserName ?? "N/A")</li>
                <li><strong>Advantage:</strong> @Pet.Advantage</li>
            </ul>
        </div>
    </div>
</div>

<style>
    /* Overall card adjustments */
    .pet-card-compact {
        width: 100% !important; /* Example fixed width, adjust as needed */
        height: 380px; /* Example fixed height, adjust as needed */
    }

    /* Image container */
    .card-img-container {
        height: 60%; /* Photo takes 60% of the card height */
        overflow: hidden;
    }

    .pet-card-img-large {
        width: 100%;
        height: 100%; /* Make image fill its container */
        object-fit: cover;
        border-top-left-radius: var(--bs-card-border-radius);
        border-top-right-radius: var(--bs-card-border-radius);
    }

    .no-image-placeholder {
        height: 100%; /* Fill container */
        font-size: 3rem;
        background-color: #f8f9fa;
        color: #adb5bd;
    }

    /* Delete button */
    .delete-image-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 10;
        background-color: rgba(220, 53, 69, 0.8);
        border: none;
    }

        .delete-image-btn:hover {
            background-color: rgba(220, 53, 69, 1);
        }

    /* Card body and text content */
    .card-body {
        padding: 0.75rem; /* Reduce padding for more compact look */
    }

    .text-content {
        flex: 1; /* Allow text content to take available space */
        display: flex;
        flex-direction: column;
        justify-content: center; /* Center content vertically if needed */
    }

    .card-body .card-title {
        margin-bottom: 0.5rem;
        font-size: 1.15rem;
    }

    .card-body .list-unstyled {
        font-size: 0.875rem;
        line-height: 1.3;
        margin-bottom: 0; /* Remove default bottom margin */
    }

        .card-body .list-unstyled li {
            margin-bottom: 0.2rem;
        }
</style>