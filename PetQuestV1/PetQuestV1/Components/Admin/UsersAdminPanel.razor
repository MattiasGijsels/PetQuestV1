@namespace PetQuestV1.Components.Admin
@inherits UsersAdminPanelBase

@using System.ComponentModel.DataAnnotations
@using PetQuestV1.Contracts.Enums
@using Microsoft.AspNetCore.Identity

<div class="card mb-5">
    <div class="card-header d-flex justify-content-between align-items-center">
        <button class="btn btn-link text-decoration-none" @onclick="ToggleUsersSection">
            <strong>Users</strong>
            <i class="bi @(IsUsersSectionVisible ? "bi-caret-down-fill" : "bi-caret-right-fill")"></i>
        </button>
        @if (IsUsersSectionVisible && !IsUserFormVisible)
        {
            <button class="btn btn-sm btn-success" @onclick="NavigateToRegisterPage">
                <i class="bi bi-plus"></i> Add New User
            </button>
        }
    </div>
    <div class="collapse @(IsUsersSectionVisible ? "show" : "")">
        <div class="card-body p-0">
            @if (IsUserFormVisible)
            {
                <EditForm Model="UserFormModel" OnValidSubmit="HandleUserFormSubmit" class="p-3 border-bottom">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="row g-2 mb-2">
                        <div class="col-sm-4">
                            <label for="userName" class="form-label">User Name:</label>
                            <InputText id="userName" class="form-control" @bind-Value="UserFormModel.UserName" placeholder="User Name" />
                            <ValidationMessage For="@(() => UserFormModel.UserName)" />
                        </div>
                        <div class="col-sm-4">
                            <label for="email" class="form-label">Email:</label>
                            <InputText id="email" class="form-control" @bind-Value="UserFormModel.Email" placeholder="Email Address" />
                            <ValidationMessage For="@(() => UserFormModel.Email)" />
                        </div>
                            <div class="col-sm-4">
                                <label for="roleSelect" class="form-label">Role:</label>
                                <InputSelect id="roleSelect" class="form-select" @bind-Value="UserFormModel.SelectedRoleId">
                                    <option value="">-- Select Role --</option>
                                    @foreach (var role in AvailableRoles)
                                    {
                                        <option value="@role.Id">@role.Name</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => UserFormModel.SelectedRoleId)" />
                            </div>
                    </div>
                    <button type="submit" class="btn btn-primary btn-sm me-2">Save</button>
                    <button type="button" class="btn btn-secondary btn-sm" @onclick="CancelUserForm">Cancel</button>
                </EditForm>
            }

            @* --- Search Bar --- *@
            <div class="p-3">
                <input type="text" class="form-control" placeholder="Search users by name, email, or role"
                       @bind="SearchTerm" @oninput="OnSearchInput" />
            </div>

            @if (!IsUserFormVisible)
            {
                <table class="table table-striped table-hover mb-0 admin-table">
                    <thead class="table-light">
                        <tr>
                            <th @onclick='() => SortUsers("UserName")' class="sortable-header">
                                User Name <i class="bi @GetSortIcon("UserName")"></i>
                            </th>
                            <th>Email</th>
                            <th @onclick='() => SortUsers("PetCount")' class="sortable-header">
                                Pets <i class="bi @GetSortIcon("PetCount")"></i>
                            </th>
                            <th @onclick='() => SortUsers("RoleName")' class="sortable-header">
                                Role <i class="bi @GetSortIcon("RoleName")"></i>
                            </th>
                            <th style="width: 120px">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (PagedUsers.Any())
                        {
                            @foreach (var user in PagedUsers)
                            {
                                <tr>
                                    <td>@user.UserName</td>
                                    <td>@user.Email</td>
                                    <td>@user.PetCount</td>
                                    <td>@user.RoleName</td> 
                                    <td>
                                        <button class="btn btn-sm btn-outline-secondary me-1" @onclick="() => EditUser(user.Id)">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => SoftDeleteUser(user.Id)">
                                            <i class="bi bi-trash"></i> Soft
                                        </button>
                                        @if (user.IsDeleted)
                                        {
                                            <button class="btn btn-sm btn-outline-success" @onclick="() => RestoreUser(user.Id)">
                                                <i class="bi bi-arrow-clockwise"></i> Restore
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center">No users found.</td> 
                            </tr>
                        }
                    </tbody>
                </table>
                <nav class="p-2 border-top d-flex justify-content-center">
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item @(UsersCurrentPage == 1 ? "disabled" : string.Empty)">
                            <a class="page-link" @onclick="() => ChangeUsersPage(UsersCurrentPage - 1)">Prev</a>
                        </li>
                        @for (int i = 1; i <= UsersTotalPages; i++)
                        {
                            <li class="page-item @(UsersCurrentPage == i ? "active" : string.Empty)">
                                <a class="page-link" @onclick="() => ChangeUsersPage(i)">@i</a>
                            </li>
                        }
                        <li class="page-item @(UsersCurrentPage == UsersTotalPages ? "disabled" : string.Empty)">
                            <a class="page-link" @onclick="() => ChangeUsersPage(UsersCurrentPage + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>